apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-app
  labels:
    app: restaurant-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurant-app
  template:
    metadata:
      labels:
        app: restaurant-app
    spec:
      containers:
        - name: restaurant-app
          imagePullPolicy: Always
          command: ["serve", "-s", "build"]
          image: docker.io/nzorro/restaurant-app:v0.2-eks

        - name: restaurant-service
          command: ["npm", "run", "restaurantService"]
          image: docker.io/nzorro/restaurant-app:v0.2-eks
          env:
            - name: STORAGE
              value: "mongo"
            - name: MONGODB_URI
              value: "mongodb://restaurant-mongo-svc:27017/restaurantdb"

        - name: checkout
          command: ["npm", "run", "checkoutService"]
          image: docker.io/nzorro/restaurant-app:v0.2-eks

        - name: menu
          command: ["npm", "run", "menuService"]
          image: docker.io/nzorro/restaurant-app:v0.2-eks
          env:
            - name: MONGODB_URI
              value: "mongodb://restaurant-mongo-svc:27017/restaurantdb"

      imagePullSecrets:
        - name: regcred

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-app-mongodb
  labels:
    app: restaurant-app-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurant-app-mongodb
  template:
    metadata:
      labels:
        app: restaurant-app-mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:6
          args: ["--bind_ip", "0.0.0.0"]
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
      volumes:
        - name: mongo-data
          emptyDir: {}

---
# Service for the restaurant app
apiVersion: v1
kind: Service
metadata:
  name: restaurant-app-svc
spec:
  selector:
    app: restaurant-app
  ports:
    - name: main
      protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 30000

    - name: restaurant-service
      protocol: TCP
      port: 3001
      targetPort: 3001
      nodePort: 30001

    - name: checkout-service
      protocol: TCP
      port: 3002
      targetPort: 3002
      nodePort: 30002

    - name: menu-service
      protocol: TCP
      port: 3003
      targetPort: 3003
      nodePort: 30003
  type: LoadBalancer

---
apiVersion: v1
kind: Service
metadata:
  name: restaurant-mongo-svc
spec:
  selector:
    app: restaurant-app-mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  type: ClusterIP
