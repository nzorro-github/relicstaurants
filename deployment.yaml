apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-app
  labels:
    app: restaurant-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurant-app
  template:
    metadata:
      labels:
        app: restaurant-app
    spec:
      containers:
      - name: mongodb
        image: mongo:6
        args: ["--bind_ip", "0.0.0.0"]
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      - name: restaurant-app
        command: ['/usr/local/bin/serve', '-s', 'build']
        image: nzorro/restaurant-app:latest
      - name: restaurant-service
        command: ['/bin/sh','-c','cd restaurantService && /usr/local/bin/node ./start.js']
        image: nzorro/restaurant-app:latest
        env:
        - name: STORAGE
          value: "mongo"
        - name: MONGODB_URI
          value: "mongodb://restaurant-mongo-svc:27017/restaurantdb"
      - name: checkout
        command: ['/bin/sh','-c','cd checkoutService && /usr/local/bin/node ./start.js']
        image: nzorro/restaurant-app:latest
      - name: menu
        command: ['/bin/sh','-c','cd menuService && /usr/local/bin/node ./start.js']
        image: nzorro/restaurant-app:latest
        env:
        - name: MONGODB_URI
          value: "mongodb://restaurant-mongo-svc:27017/restaurantdb"
            
      initContainers:  
      - name: mongo-seed
        image: nzorro/restaurant-app:latest
        command: ["node", "/app/restaurantService/seed.js"]
        restartPolicy: Always
        env:
        - name: MONGODB_URI
          value: "mongodb://restaurant-mongo-svc:27017/restaurantdb"
        volumeMounts:
        - name: mongo-data
          mountPath: /data/db
      volumes:
      - name: mongo-data
        emptyDir: {}
      imagePullSecrets:
      - name: regcred

---
# Service for the restaurant app
apiVersion: v1
kind: Service
metadata:
  name: restaurant-app-svc
spec:
  selector:
    app: restaurant-app
  ports:
  - name: main
    protocol: TCP
    port: 3000
    targetPort: 3000
  - name: restaurant-service
    protocol: TCP
    port: 3001
    targetPort: 3001
  - name: checkout-service
    protocol: TCP
    port: 3002
    targetPort: 3002
  - name: menu-service
    protocol: TCP
    port: 3003
    targetPort: 3003
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: restaurant-mongo-svc
spec:
  selector:
    app: restaurant-app
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017
  type: ClusterIP
